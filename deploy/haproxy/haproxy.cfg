global
	log /dev/log	local0
	log /dev/log	local1 notice
    maxconn 2048
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
    option  forwardfor
    option  http-server-close
    option  http-pretend-keepalive
        timeout connect 5s
        timeout client  30s
        timeout server  30
# essential for persistent sockjs connections, see
# http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#timeout%20tunnel for more information
        timeout tunnel  1h
        timeout client-fin 30s
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend www-http
    bind :80
    reqadd X-Forwarded-Proto:\ http
    acl is_sockjs path_beg /websocket
    default_backend vcweb

frontend www-https
    bind :443 ssl crt /etc/ssl/local/server.pem
    reqadd X-Forwarded-Proto:\ https
    acl is_sockjs path_beg /websocket
    use_backend sockjs if is_sockjs
    default_backend vcweb

backend vcweb
    redirect scheme https if !{ ssl_fc }
# proxy to local nginx uwsgi app
    server vcweb-nginx 127.0.0.1:8081

backend sockjs
    timeout server 120s
    server sockjs-tornado 127.0.0.1:8882
